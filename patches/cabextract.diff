afl-fuzz [options] -- /path/to/cabextract -t @@

--- a/mspack/cabd.c
+++ b/mspack/cabd.c
@@ -1280,6 +1280,7 @@
       return MSPACK_ERR_READ;
     }
 
+#if 0
     /* perform checksum test on the block (if one is stored) */
     if ((cksum = EndGetI32(&hdr[cfdata_CheckSum]))) {
       unsigned int sum2 = cabd_checksum(d->i_end, (unsigned int) len, 0);
@@ -1288,6 +1289,7 @@
 	sys->message(d->infh, "WARNING; bad block checksum found");
       }
     }
+#endif
 
     /* advance end of block pointer to include newly read data */
     d->i_end += len;
--- a/src/cabextract.c
+++ b/src/cabextract.c
@@ -479,12 +479,14 @@
           int spaces = 79 - (strlen(name) + 8 + 32);
           printf("  %s  OK  ", name);
           while (spaces-- > 0) putchar(' ');
+#if 0
           printf("%02x%02x%02x%02x%02x%02x%02x%02x"
                  "%02x%02x%02x%02x%02x%02x%02x%02x\n",
                  md5_result[0], md5_result[1], md5_result[2], md5_result[3],
                  md5_result[4], md5_result[5], md5_result[6], md5_result[7],
                  md5_result[8], md5_result[9], md5_result[10],md5_result[11],
                  md5_result[12],md5_result[13],md5_result[14],md5_result[15]);
+#endif
         }
       }
       else {
@@ -1113,7 +1115,9 @@
     else if (filename == TEST_FNAME) {
       fh->regular_file = 0;
       fh->fh = NULL;
+#if 0
       md5_init_ctx(&md5_context);
+#endif
       return (struct mspack_file *) fh;
     }
     else {
@@ -1133,7 +1137,9 @@
   struct mspack_file_p *this = (struct mspack_file_p *) file;
   if (this) {
     if (this->name == TEST_FNAME) {
+#if 0
       md5_finish_ctx(&md5_context, (void *) &md5_result);
+#endif
     }
     else if (this->regular_file) {
       fclose(this->fh);
@@ -1155,7 +1161,9 @@
   struct mspack_file_p *this = (struct mspack_file_p *) file;
   if (this && buffer && bytes >= 0) {
     if (this->name == TEST_FNAME) {
+#if 0
       md5_process_bytes(buffer, (size_t) bytes, &md5_context);
+#endif
       return bytes;
     }
     else {
