Env variables::

   AFL_HARDEN=1
   AFL_IMPORT_FIRST=1
   AFL_NO_CPU_RED=1
   AFL_SKIP_CPUFREQ=1
   AFL_NO_ARITH=1
   AFL_FAST_CAL=1
   AFL_ANALYZE_HEX=1

LLVM mode::

   #ifdef __AFL_HAVE_MANUAL_CONTROL
   __AFL_INIT();
   #endif

LLVM persistent mode::

   while (__AFL_LOOP(1000)) {
       ...
   }

Compiler defs::

    #ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION
    ...
    #endif

    #ifdef __AFL_COMPILER
    ...
    #endif

ASan::

   env -u AFL_HARDEN AFL_USE_ASAN=1
   ASAN_OPTIONS=abort_on_error=1:allocator_may_return_null=1

UBSan::

   UBSAN_OPTIONS=halt_on_error=1:abort_on_error=1:print_stacktrace=1
   afl-clang-fast -rtlib=compiler-rt -print-libgcc-file-name
   afl-clang-fast -rtlib=compiler-rt -v /dev/null 2>&1 | xargs -n1 | grep /libclang_rt.builtins- | head -n1

Valgrind + afl-tmin/afl-cmin::

   valgrind --quiet --error-exitcode=86 ...

afl-tmin for timeouts::

   afl-tmin <options> -- sh -c 'timeout 0.5s <command>; [ $? -eq 124 ] && kill -ALRM $$'

.. vim:ts=3 sts=3 sw=3 et ft=rst
