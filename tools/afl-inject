#!/usr/bin/env perl

# Copyright Â© 2017 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

use strict;
use warnings;

use English qw(-no_match_vars);
use File::Copy ();
use File::Find ();
use File::Path ();
use File::Temp ();
use Getopt::Long qw(:config no_ignore_case bundling);

sub usage
{
    print {*STDERR} "Usage: $PROGRAM_NAME -o <syncdir> [-S <ident>] <testcase>...\n";
    exit 1;
}

my %opts;
my $syncdir;
my $instance = 'inject';
Getopt::Long::GetOptions(
    'o=s' => \$syncdir,
    'S=s' => \$instance
) or usage;
@ARGV or usage;
defined $syncdir or usage;
stat "$syncdir" or die "$syncdir: $ERRNO";
my $queue = "$syncdir/$instance/queue";
File::Path::make_path($queue);
my $i = -1;
File::Find::find(
    sub {
        if ($_ eq '.') {
            return;
        }
        if (/^id:([0-9]+)/) {
            my $j = $1;
            if ($j > $i) {
                $i = $j;
            }
        }
        $File::Find::prune = 1;
    }, $queue
);
for my $file (@ARGV) {
    my $tmpfile = File::Temp::mktemp("$queue/.tmpinject.XXXXX");
    my $name = sprintf('id:%06d,inject', ++$i);
    my $target = "$queue/$name";
    print "$file -> $target\n";
    File::Copy::copy($file, $tmpfile) or die "$file -> $tmpfile: $ERRNO";
    rename($tmpfile, $target) or die "$tmpfile -> $target: $ERRNO";
}

# vim:ts=4 sts=4 sw=4 et
